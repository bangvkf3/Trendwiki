{"version":3,"sources":["components/Header.js","components/Navigation.js","components/Movie.js","db.js","routes/Home.js","routes/Trend.js","App.js","index.js"],"names":["Header","className","Navigation","to","Movie","rank","name","period","categories","emo","data","series","slice","arr","result","i","length","parseFloat","index","mean","map","genre","class","width","height","margin","top","right","left","bottom","dataKey","angle","textAnchor","interval","minTickGap","allowDuplicatedCategory","type","domain","dataMax","Math","floor","align","verticalAlign","stroke","dot","x","strokeDasharray","trends","id","require","Home","state","isLoading","movies","jsonArray","getMovies","a","axios","get","setState","this","console","log","trend","React","Component","Trend","category","repo","issueNumber","App","path","exact","component","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7a96b7b1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nfunction Header() {\n  return (\n    <div className=\"header-container\">\n      <div className=\"header\">\n        <div className=\"header__title\">\n          <h1>üìù Trend Wiki</h1>\n        </div>\n        <div className=\"header__info\">\n          <h3>üñ•202R - Deep Learning</h3>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nfunction Navigation() {\n  return (\n    <section className=\"nav-container\">\n      <div className=\"nav\">\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/Trend1\">Trend1</Link>\n        <Link to=\"/Trend2\">Trend2</Link>\n        <Link to=\"/Trend3\">Trend3</Link>\n        <Link to=\"/Trend4\">Trend4</Link>\n        <Link to=\"/Trend5\">Trend5</Link>\n        <Link to=\"/Trend6\">Trend6</Link>\n        <Link to=\"/Trend7\">Trend7</Link>\n        <Link to=\"/Trend8\">Trend8</Link>\n        <Link to=\"/Trend9\">Trend9</Link>\n        <Link to=\"/Trend10\">Trend10</Link>\n      </div>\n    </section>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\nimport {\n  ReferenceLine,\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nfunction mean(arr) {\n  let result = 0;\n  for (let i = 0; i < arr.length; i++) {\n    result += parseFloat(arr[i].index);\n  }\n  return result / arr.length;\n}\n\nfunction Movie({ rank, name, period, categories, emo, data }) {\n  const series = [\n    {\n      name: \"Train index\",\n      data: data.slice(1095, 1103),\n    },\n    {\n      name: \"Generated index\",\n      data: data.slice(1101, 1132),\n    },\n  ];\n  const UL = mean(data.slice(366, 731));\n  return (\n    <div className=\"movie\">\n      <div className=\"movie__data\">\n        <h3 className=\"movie__title\">\n          Rank {rank} {emo} {name}\n        </h3>\n        <ul className=\"movie__genres\">\n          Category :\n          {categories.map((genre, index) => (\n            <li key={index} className=\"genres_genre\">\n              {genre}\n            </li>\n          ))}\n        </ul>\n        <h5 className=\"movie__year\">{period}</h5>\n      </div>\n      <div class=\"movie__chart\">\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\n          <LineChart\n            data={data}\n            margin={{ top: 30, right: 30, left: 7, bottom: 40 }}\n          >\n            {/* <CartesianGrid strokeDasharray=\"3 3\" /> */}\n            <XAxis\n              dataKey=\"period\"\n              angle={-30}\n              textAnchor=\"end\"\n              interval=\"preserveStartEnd\"\n              minTickGap={0}\n              allowDuplicatedCategory={false}\n            />\n            <YAxis\n              type=\"number\"\n              domain={[0, dataMax => Math.floor(dataMax) + 10]}\n            />\n\n            <Tooltip />\n            <Legend align=\"center\" verticalAlign=\"top\" height=\"40px\" />\n            {/* <Line type=\"Linear\" dataKey=\"index\" stroke=\"#8884d8\" dot={false} /> */}\n            {/* <Line\n              type=\"Linear\"\n              data={series[0].data}\n              dataKey=\"index\"\n              stroke=\"#82ca9d\"\n              dot={false}\n              name={series[0].name}\n              key={series[0].name}\n            /> */}\n            <Line\n              type=\"Linear\"\n              data={series[1].data}\n              dataKey=\"index\"\n              stroke=\"#248BD6\"\n              dot={false}\n              name={series[1].name}\n              key={series[1].name}\n            />\n\n            <ReferenceLine x=\"2019.11.8\" stroke=\"blue\" strokeDasharray=\"3 3\" />\n            {/* <ReferenceLine\n              y={UL}\n              stroke=\"red\"\n              label={{\n                position: \"right\",\n                value: \"UL\",\n                fill: \"red\",\n                fontSize: 14,\n              }}\n              strokeWidth={2}\n            /> */}\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","const data1 = require(\"./output/data1.json\");\nconst data2 = require(\"./output/data2.json\");\nconst data3 = require(\"./output/data3.json\");\nconst data4 = require(\"./output/data4.json\");\nconst data5 = require(\"./output/data5.json\");\nconst data6 = require(\"./output/data6.json\");\nconst data7 = require(\"./output/data7.json\");\nconst data8 = require(\"./output/data8.json\");\nconst data9 = require(\"./output/data9.json\");\nconst data10 = require(\"./output/data10.json\");\n\nlet trends = [\n  {\n    id: 0,\n    rank: 1,\n    name: \"Ìú¥ÎåÄÌè∞Ïö©Ìíà\",\n    period: \"2020. 11. 13. ~ 2020. 12. 12.\",\n    categories: [\" \", \"ÏÉùÌôú/Í±¥Í∞ï\", \">\", \"ÏûêÎèôÏ∞®Ïö©Ìíà\"],\n    emo: \"üê∂\",\n    data: data1,\n  },\n  {\n    id: 1,\n    rank: 2,\n    name: \"Î™®Ìòï/ÌîÑÎùºÎ™®Îç∏/ÌîºÍ∑úÏñ¥\",\n    period: \"2020. 11. 13. ~ 2020. 12. 12.\",\n    categories: [\" \", \"ÏÉùÌôú/Í±¥Í∞ï\", \">\", \"ÏàòÏßëÌíà\"],\n    emo: \"üê±\",\n    data: data2,\n  },\n  {\n    id: 2,\n    rank: 3,\n    name: \"ÏΩîÏä§Ìä¨ÌîåÎ†àÏù¥\",\n    period: \"2020. 11. 13. ~ 2020. 12. 12.\",\n    categories: [\" \", \"ÏÉùÌôú/Í±¥Í∞ï\", \">\", \"ÏàòÏßëÌíà\"],\n    emo: \"üê≠\",\n    data: data3,\n  },\n  {\n    id: 3,\n    rank: 4,\n    name: \"Î≥¥Í¥Ä/Î∞ÄÌèêÏö©Í∏∞\",\n    period: \"2020. 11. 13. ~ 2020. 12. 12.\",\n    categories: [\" \", \"ÏÉùÌôú/Í±¥Í∞ï\", \">\", \"Ï£ºÎ∞©Ïö©Ìíà\"],\n    emo: \"üêπ\",\n    data: data4,\n  },\n  {\n    id: 4,\n    rank: 5,\n    name: \"ÏÑúÎ∞îÏù¥Î≤å\",\n    period: \"2020. 11. 13. ~ 2020. 12. 12.\",\n    categories: [\" \", \"ÏÉùÌôú/Í±¥Í∞ï\", \">\", \"ÏàòÏßëÌíà\"],\n    emo: \"üê∞\",\n    data: data5,\n  },\n  {\n    id: 5,\n    rank: 6,\n    name: \"ÎπÑÎç∞/ÎπÑÎç∞Ïö©Ìíà\",\n    period: \"2020. 11. 13. ~ 2020. 12. 12.\",\n    categories: [\" \", \"ÏÉùÌôú/Í±¥Í∞ï\", \">\", \"ÏöïÏã§Ïö©Ìíà\"],\n    emo: \"ü¶ä\",\n    data: data6,\n  },\n  {\n    id: 6,\n    rank: 7,\n    name: \"ÏàòÏûëÏóÖÍ≥µÍµ¨\",\n    period: \"2020. 11. 13. ~ 2020. 12. 12.\",\n    categories: [\" \", \"ÏÉùÌôú/Í±¥Í∞ï\", \">\", \"Í≥µÍµ¨\"],\n    emo: \"üêª\",\n    data: data7,\n  },\n  {\n    id: 7,\n    rank: 8,\n    name: \"ÏùåÌñ•Í∏∞ÏûêÏû¨\",\n    period: \"2020. 11. 13. ~ 2020. 12. 12.\",\n    categories: [\" \", \"ÏÉùÌôú/Í±¥Í∞ï\", \">\", \"ÏïÖÍ∏∞\"],\n    emo: \"üêº\",\n    data: data8,\n  },\n  {\n    id: 8,\n    rank: 9,\n    name: \"Ïª§ÌîºÏö©Ìíà\",\n    period: \"2020. 11. 13. ~ 2020. 12. 12.\",\n    categories: [\" \", \"ÏÉùÌôú/Í±¥Í∞ï\", \">\", \"Ï£ºÎ∞©Ïö©Ìíà\"],\n    emo: \"üê®\",\n    data: data9,\n  },\n  {\n    id: 9,\n    rank: 10,\n    name: \"ÏãúÌä∏Ïª§Î≤Ñ\",\n    period: \"2020. 11. 13. ~ 2020. 12. 12.\",\n    categories: [\" \", \"ÏÉùÌôú/Í±¥Í∞ï\", \">\", \"ÏûêÎèôÏ∞®Ïö©Ìíà\"],\n    emo: \"üêØ\",\n    data: data10,\n  },\n];\n\nexport default trends;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../components/Movie\";\nimport \"./Home.css\";\nimport trends from \"../db\";\n\nconst data = require(\"../output/data3.json\");\n\nclass Home extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n    jsonArray: [],\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json\"\n    );\n    // console.log(movies.data.data.movies);\n    this.setState({ movies, isLoading: false });\n  };\n\n  // getCsv = async () => {\n  //   const data = await readString()\n  // }\n  componentDidMount() {\n    this.getMovies();\n    console.log(data);\n  }\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {trends.map(trend => (\n              <Movie\n                key={trend.id}\n                rank={trend.rank}\n                name={trend.name}\n                period={trend.period}\n                categories={trend.categories}\n                emo={trend.emo}\n                data={trend.data}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Trend.css\";\nimport {\n  ReferenceLine,\n  ResponsiveContainer,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\nimport ReactUtterences from \"react-utterances\";\n\nfunction mean(arr) {\n  let result = 0;\n  for (let i = 0; i < arr.length; i++) {\n    result += parseFloat(arr[i].index);\n  }\n  return result / arr.length;\n}\n\nconst repo = \"bangvkf3/blog-comments\";\n\nfunction Trend({ rank, name, period, categories, data }) {\n  const series = [\n    {\n      name: \"Train index\",\n      data: data.slice(735, 1103),\n    },\n    {\n      name: \"Generated index\",\n      data: data.slice(1102, 1132),\n    },\n  ];\n  const UL = mean(data.slice(366, 731));\n  return (\n    <section className=\"trend-container\">\n      <div className=\"trend__board\">\n        <div className=\"trend__rank\">Rank #{rank}</div>\n        <h3 className=\"trend__name\">{name}</h3>\n        <ul className=\"trend__categories\">\n          Category :\n          {categories.map((category, index) => (\n            <li key={index} className=\"categories__category\">\n              {category}\n            </li>\n          ))}\n        </ul>\n        <h5 className=\"trend__period\">{period}</h5>\n        <div className=\"trend__graph\">\n          <ResponsiveContainer width=\"100%\" height=\"100%\">\n            <LineChart\n              data={data}\n              margin={{ top: 30, right: 30, left: 5, bottom: 30 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis\n                dataKey=\"period\"\n                angle={-30}\n                textAnchor=\"end\"\n                interval=\"preserveStartEnd\"\n                minTickGap={0}\n                allowDuplicatedCategory={false}\n              />\n              <YAxis\n                type=\"number\"\n                domain={[0, dataMax => Math.floor(dataMax) + 10]}\n              />\n\n              <Tooltip />\n              <Legend align=\"center\" verticalAlign=\"top\" height=\"40px\" />\n              {/* <Line type=\"Linear\" dataKey=\"index\" stroke=\"#8884d8\" dot={false} /> */}\n              <Line\n                type=\"Linear\"\n                data={series[0].data}\n                dataKey=\"index\"\n                stroke=\"#82ca9d\"\n                dot={false}\n                name={series[0].name}\n                key={series[0].name}\n              />\n              <Line\n                type=\"Linear\"\n                data={series[1].data}\n                dataKey=\"index\"\n                stroke=\"#248BD6\"\n                dot={false}\n                name={series[1].name}\n                key={series[1].name}\n              />\n              <ReferenceLine\n                x=\"2019.11.8\"\n                stroke=\"blue\"\n                strokeDasharray=\"3 3\"\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      </div>\n      <div className=\"trend__comment\">\n        <ReactUtterences repo={repo} type={\"issue-number\"} issueNumber={rank} />\n      </div>\n    </section>\n  );\n}\n\nTrend.propTypes = {\n  id: PropTypes.number.isRequired,\n  rank: PropTypes.number.isRequired,\n  period: PropTypes.string.isRequired,\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Trend;\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Navigation from \"./components/Navigation\";\nimport Home from \"./routes/Home\";\nimport Trend from \"./routes/Trend\";\nimport \"./App.css\";\nimport trends from \"./db\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <HashRouter>\n        <Route path=\"/\" exact={true} component={Home} />\n        {trends.map(trend => (\n          <Route\n            path={`/trend${trend.id + 1}`}\n            render={() => (\n              <Trend\n                key={trend.id}\n                rank={trend.rank}\n                name={trend.name}\n                period={trend.period}\n                categories={trend.categories}\n                data={trend.data}\n              />\n            )}\n          />\n        ))}\n        <Navigation />\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"potato\"));\n"],"sourceRoot":""}